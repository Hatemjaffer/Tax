System.NotSupportedException: Malformed function pointer signature.
   عند Reflector.CodeModel.Assembly.Module.ReadFunctionPointer(ByteArrayReader reader, IGenericArgumentProvider genericType, IGenericArgumentProvider genericMethod)
   عند Reflector.CodeModel.Assembly.Module.ReadTypeSignature(ByteArrayReader reader, IGenericArgumentProvider genericType, IGenericArgumentProvider genericMethod, Boolean& pinned)
   عند Reflector.CodeModel.Assembly.Module.ReadTypeSignature(ByteArrayReader reader, IGenericArgumentProvider genericType, IGenericArgumentProvider genericMethod)
   عند Reflector.CodeModel.Assembly.FieldDeclaration..ctor(TypeDeclaration declaringType, UInt16 flags, Int32 name, Int32 signature)
   عند Reflector.CodeModel.Assembly.Module.DecodeTypeDeclarationTable()
   عند Reflector.CodeModel.Assembly.Module.DecodeMetaData()
   عند Reflector.CodeModel.Assembly.Module.get_Types()
   عند Reflector.CodeModel.Assembly.Equality.ResolveTypeReference(ITypeReference typeReference, HashSet`1 alreadyChecked)
   عند Reflector.CodeModel.Assembly.TypeReference.Resolve(HashSet`1 alreadyChecked)
   عند Reflector.CodeModel.Assembly.Equality.ResolveTypeReference(ITypeReference typeReference, HashSet`1 alreadyChecked)
   عند Reflector.CodeModel.Assembly.TypeReference.Resolve(HashSet`1 alreadyChecked)
   عند Reflector.CodeModel.Assembly.CustomAttribute.GetUnderlyingFieldType(IType value)
   عند Reflector.CodeModel.Assembly.CustomAttribute.ReadValue(ByteArrayReader reader, IType type)
   عند Reflector.CodeModel.Assembly.CustomAttribute.get_Arguments()
   عند Reflector.Disassembler.Helper.IsTypeForward(ICustomAttribute customAttribute, ITypeReference& type)
   عند Reflector.CodeModel.Assembly.Assembly.AddCustomAttribute(ICustomAttribute customAttribute)
   عند Reflector.CodeModel.Assembly.Module.DecodeAssemblyCustomAttributes()
   عند Reflector.CodeModel.Assembly.Assembly.LoadAttributesIfNeeded()
   عند Reflector.CodeModel.Assembly.Assembly.get_TypeForwardedTo()
   عند Reflector.CodeModel.Assembly.Equality.ResolveTypeReference(ITypeReference typeReference, HashSet`1 alreadyChecked)
   عند Reflector.CodeModel.Assembly.TypeReference.Resolve(HashSet`1 alreadyChecked)
   عند Reflector.CodeModel.Assembly.CustomAttribute.GetUnderlyingFieldType(IType value)
   عند Reflector.CodeModel.Assembly.CustomAttribute.ReadValue(ByteArrayReader reader, IType type)
   عند Reflector.CodeModel.Assembly.CustomAttribute.get_Arguments()
   عند Reflector.Disassembler.Helper.IsTypeForward(ICustomAttribute customAttribute, ITypeReference& type)
   عند Reflector.CodeModel.Assembly.Assembly.AddCustomAttribute(ICustomAttribute customAttribute)
   عند Reflector.CodeModel.Assembly.Module.DecodeAssemblyCustomAttributes()
   عند Reflector.CodeModel.Assembly.Assembly.LoadAttributesIfNeeded()
   عند Reflector.CodeModel.Assembly.Assembly.get_TypeForwardedTo()
   عند Reflector.CodeModel.Assembly.Equality.ResolveTypeReference(ITypeReference typeReference, HashSet`1 alreadyChecked)
   عند Reflector.CodeModel.Assembly.TypeReference.Resolve(HashSet`1 alreadyChecked)
   عند Reflector.CodeModel.Assembly.MethodReference.Resolve()
   عند Reflector.Disassembler.Instructions.CallInstruction.AnalyzeExpression(NewTranslator translator, Object value)
   عند Reflector.Disassembler.TranslatorBase.NodeAnalyzer.Analyze(CodeNode node)
   عند Reflector.Disassembler.TranslatorBase.NodeAnalyzer.AnalyzeAll()
   عند Reflector.Disassembler.TranslatorBase.NodeAnalyzer.AnalyzeAll(NewTranslator translator)
   عند Reflector.Disassembler.NewTranslator.TranslateMethodDeclaration(IMethodDeclaration mD, IMethodBody mB)
   عند Reflector.Disassembler.Disassembler.TransformMethodDeclaration(IMethodDeclaration value)
   عند Reflector.CodeModel.Visitor.Transformer.TransformMethodDeclarationCollection(IMethodDeclarationCollection methods)
   عند Reflector.Disassembler.Disassembler.TransformTypeDeclaration(ITypeDeclaration value)
   عند Reflector.Application.Translator.TranslateTypeDeclaration(ITypeDeclaration value, Boolean memberDeclarationList, Boolean methodDeclarationBody)
   عند Reflector.Application.FileDisassembler.WriteTypeDeclaration(ITypeDeclaration typeDeclaration, String sourceFile, ILanguageWriterConfiguration languageWriterConfiguration)
namespace TaxGrad.My
{
}

